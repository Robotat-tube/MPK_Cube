%testcase

move_sequence(
[-r],
cube(
    'U', 'U' ,'U', 'U' ,'U', 'U' ,'U', 'U' ,'U', 'U' ,'U',
    'F', 'F' ,'F', 'F' ,'F', 'F' ,'F', 'F' ,'F', 'F' ,'F',
    'H', 'H' ,'H', 'H' ,'H', 'H' ,'H', 'H' ,'H', 'H' ,'H',
    'R', 'R' ,'R', 'R' ,'R', 'R' ,'R', 'R' ,'R', 'R' ,'R',
    'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD',
    'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD',
    'D', 'D' ,'D', 'D' ,'D', 'D' ,'D', 'D' ,'D', 'D' ,'D',
    'B', 'B' ,'B', 'B' ,'B', 'B' ,'B', 'B' ,'B', 'B' ,'B',
    'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD',
    'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD',
    'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU',
    'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU'),
MoveSequenceResult
),
solve(Solution, MoveSequenceResult).


move_sequence(
[+r, -r],
cube(
    'U', 'U' ,'U', 'U' ,'U', 'U' ,'U', 'U' ,'U', 'U' ,'U',
    'F', 'F' ,'F', 'F' ,'F', 'F' ,'F', 'F' ,'F', 'F' ,'F',
    'H', 'H' ,'H', 'H' ,'H', 'H' ,'H', 'H' ,'H', 'H' ,'H',
    'R', 'R' ,'R', 'R' ,'R', 'R' ,'R', 'R' ,'R', 'R' ,'R',
    'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD',
    'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD',
    'D', 'D' ,'D', 'D' ,'D', 'D' ,'D', 'D' ,'D', 'D' ,'D',
    'B', 'B' ,'B', 'B' ,'B', 'B' ,'B', 'B' ,'B', 'B' ,'B',
    'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD',
    'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD',
    'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU',
    'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU'),
MoveSequenceResult
).

cube(
    %1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10, 11
    'U', 'U' ,'U', 'U' ,'U', 'U' ,'U', 'U' ,'U', 'U' ,'U', % Up / weiss
    'F', 'F' ,'F', 'F' ,'F', 'F' ,'F', 'F' ,'F', 'F' ,'F', % Fp / weiss
    'H', 'H' ,'H', 'H' ,'H', 'H' ,'H', 'H' ,'H', 'H' ,'H', % Hp / weiss
    'R', 'R' ,'R', 'R' ,'R', 'R' ,'R', 'R' ,'R', 'R' ,'R', % Rp / weiss
    'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', % FLDp / weiss
    'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', % FRDp / weiss
    'D', 'D' ,'D', 'D' ,'D', 'D' ,'D', 'D' ,'D', 'D' ,'D', % Dp / weiss
    'B', 'B' ,'B', 'B' ,'B', 'B' ,'B', 'B' ,'B', 'B' ,'B', % Bp / weiss
    'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', % BLDp / weiss
    'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', % BRDp / weiss
    'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', % BLUp / weiss
    'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU' % BRUp / weiss)


BeginState=cube(
    'U', 'U' ,'U', 'U' ,'U', 'U' ,'U', 'U' ,'U', 'U' ,'U',
    'F', 'F' ,'F', 'F' ,'F', 'F' ,'F', 'F' ,'F', 'F' ,'F',
    'H', 'H' ,'H', 'H' ,'H', 'H' ,'H', 'H' ,'H', 'H' ,'H',
    'R', 'R' ,'R', 'R' ,'R', 'R' ,'R', 'R' ,'R', 'R' ,'R',
    'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD', 'FLD' ,'FLD',
    'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD', 'FRD' ,'FRD',
    'D', 'D' ,'D', 'D' ,'D', 'D' ,'D', 'D' ,'D', 'D' ,'D',
    'B', 'B' ,'B', 'B' ,'B', 'B' ,'B', 'B' ,'B', 'B' ,'B',
    'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD', 'BLD' ,'BLD',
    'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD', 'BRD' ,'BRD',
    'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU', 'BLU' ,'BLU',
    'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU', 'BRU' ,'BRU'),
mov(r,
BeginState,
    EndState
),
mov(r,
X,
BeginState
).



mov(r,
X,
cube('U', 'U', 'U', 'U', 'U', 'U', 'U', 'F', 'F', 'F', 'U', 'F', 'FRD', 'FRD', 'FRD', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FRD', 'BRD', 'BRD', 'BRD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BRD', 'BRD', 'BRD', 'BRD', 'BRD', 'BRU', 'BRU', 'BRU', 'BRD', 'BRD', 'BRD', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BRU', 'BRU', 'BRU', 'U', 'U', 'U', 'BRU', 'BRU', 'BRU', 'BRU', 'BRU')).


cube('U', 'U', 'U', 'U', 'U', 'U', 'U', 'U', 'U', 'U', 'U', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FLD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'FRD', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BLD', 'BRD', 'BRD', 'BRD', 'BRD', 'BRD', 'BRD', 'BRD', 'BRD', 'BRD', 'BRD', 'BRD', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BLU', 'BRU', 'BRU', 'BRU', 'BRU', 'BRU', 'BRU', 'BRU', 'BRU', 'BRU', 'BRU', 'BRU').
